seq(from = -5, to = 5, length.out = 1000)
x<-seq(from = -5, to = 5, length.out = 1000)
?pnorm
pnorm(x,mean=0, sd=1)
plot(CDF)
CDF<-pnorm(x,mean=0, sd=1)
plot(CDF)
QF<-qnorm(x,mean=0,sd=1)
plot(QF)
plot(CDF,type="l", col="2")
CDF<-pnorm(x)
plot(CDF,type="l", col="2")
QF<-qnorm(x)
plot(QF,type="l", col="2")
tau<-seq(pnorm(-5),pnorm(5),length.out = 1000)
tau<-seq(pnorm(-5),pnorm(5),length.out = 1000)
QF<-qnorm(tau)
plot(tau, type="l", col="2")
plot(QF, type="l", col="2")
plot(x,CDF,type="l", col="2")
plot(tau,QF, type="l", col="2")
?pt
?pt
st<-pt(x,2)
plot(x,st,type="l", col="2")
?pchisq
z<-seq(0,40,length.out = 1000)
z<-seq(0,40,length.out = 1000)
chisq<-pchisq(z,20)
plot(z,chisq,type="l", col="2")
?ppois
poiss<-ppois(z,20)
poiss<-ppois(z,20)
plot(z,poiss,type="l", col="2")
x<-rnorm(10000)
Y<-rnorm(10000)
mean(exp(Y))
exp(mean(Y))
Y<-rnorm(100000)
mean(exp(Y))
exp(mean(Y))
median(exp(Y))
exp(median(Y))
exp(quantile(Y,0.5))
(quantile(exp(Y),0.5))
plevs<-seq(0.1,0.9,by=0.1)
rbind(exp(quantile(Y,probs=plevs)))
quantile(exp(Y),probs = plevs)
plot(Ysupp,MaxY)
# Compute mean of E[exp(Y)] and compare with exp(E[Y]).
mean(exp(Y))
Ysupp<-seq(-10,10,by=0.1)
MaxY<-pmax(Ysupp,0)
plot(Ysupp,MaxY)
plot(Ysupp,MaxY,type="l")
library(dplyr)
options(scipen=999)
Math.cbrt <- function(x) {
sign(x) * abs(x)^(1/3)
}
setwd("C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Stock Scraper")
#setwd("/Users/nishaldave/OneDrive - University of Bristol/Dissertation/Volume Forecasting/Data")
df <- read.csv("stocks_updated.csv")
#Set week 53 to week 0 - needed for lags
df$week[df$week == 53] <- 0
#Drop the index values that were generated by Python (not needed anymore)
df$X <- NULL
#Lag the close prices
df$lclose <- as.numeric(sapply(1:nrow(df), function(x) df$close[x-1]))
#Generate variable for returns
ave_close <- df %>%
group_by(asset, week) %>%
summarize(ave_close = ave(close)) %>%
ungroup()
ave_close <- unique(ave_close)
ave_close$ave_lclose <- as.numeric(sapply(1:nrow(ave_close), function(x) ave_close$ave_close[x-1]))
ave_close <- ave_close[!ave_close$week == 0,]
ave_close$ret <- log(ave_close$ave_close/ave_close$ave_lclose)
#Daily returns to calculate interweek variance
df$ret <- log(df$close/df$lclose)
#Drop the unneeded week
df <- df[!df$week == 0,]
#Generate variable for autocovariance of returns
autocov <- df %>%
group_by(asset, week) %>%
summarize(autocov = cov(close,lclose)) %>%
ungroup()
autocov$autocov <- Math.cbrt((autocov$autocov))
#Generate variable for variance/stdev
var_ret <- df %>%
group_by(asset, week) %>%
summarize(var_ret = var(ret)) %>%
ungroup()
var_ret$stdev <- sqrt(var_ret$var_ret)
#Generate variable for volume
ave_vol <- df %>%
group_by(asset, week) %>%
summarize(ave_vol = ave(close*volume)) %>%
ungroup()
ave_vol <- unique(ave_vol)
#Create a weekly dataset from the daily data
df_weekly <- as.data.frame(cbind(ave_close$asset, ave_close$week, ave_close$ret, var_ret$stdev, ave_vol$ave_vol,autocov$autocov))
df_weekly <- df_weekly %>%
rename(
Asset = V1,
Week  = V2,
Avret = V3,
Stdev = V4,
Avvol = V5,
Autocov = V6
)
#Ensure all data is numeric
df_weekly$Week  <- as.numeric(df_weekly$Week)
df_weekly$Avret <- as.numeric(df_weekly$Avret)
df_weekly$Stdev <- as.numeric(df_weekly$Stdev)
df_weekly$Avvol <- as.numeric(df_weekly$Avvol)
df_weekly$Autocov <- as.numeric(df_weekly$Autocov)
#Drop uneeded
rm(autocov, ave_close, ave_vol, df, var_ret)
#Create the log of trading volume
df_weekly$LogVol <- log(df_weekly$Avvol)
df_weekly$LogVol <- as.numeric(df_weekly$LogVol)
write.csv(df_weekly,"C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Stock Scraper\\stocks_weekly.csv", row.names = FALSE)
###############################################################################
###############################################################################
###############################################################################
#Sentiment Data Analysis
sub <- read.csv('C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\WSB Scraper\\Submissions\\assets3_v2.csv')
#sub2 <- read.csv('C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\WSB Scraper\\Submissions\\assets2_v2.csv')
#sub <- rbind(sub,sub2)
#rm(sub2)
#dates <- read.csv('C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Stock Scraper\\date.csv')
#Submissions
sub$count <- 1
num_sub <- sub %>%
group_by(asset, week) %>%
summarize(Submissions = sum(count)) %>%
ungroup()
num_sub <- num_sub %>%
rename(
Asset = asset,
Week = week,
)
#Sentiments
sentiment_weekly <- sub %>%
group_by(asset, week) %>%
summarize(sentiment_weekly = ave(compound1)) %>%
ungroup()
sentiment_weekly <- unique(sentiment_weekly)
sentiment_weekly <- sentiment_weekly %>%
rename(
Week = week,
Asset = asset,
Ave_Sentiment = sentiment_weekly
)
#Combining weekly stocks with weekly sentiments
Combined_df <- merge(df_weekly, sentiment_weekly, by=c('Week','Asset'), all = T)
Combined_df <- merge(Combined_df,num_sub, by = c('Week','Asset'), all = T)
Combined_df[is.na(Combined_df)] <- 0
Combined_df <- Combined_df[
with(Combined_df, order(Asset,Week)),
]
View(Combined_df)
Combined_df$Submissions <- ifelse(Combined_df$Submissions == 0,1,
Combined_df$Submissions)
Combined_df$Submissions <- (Combined_df$Submissions)*(1/1000000000)
Ave_Sentiment <- scale(Combined_df$Ave_Sentiment)
setwd("C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Stock Scraper")
#setwd("/Users/nishaldave/OneDrive - University of Bristol/Dissertation/Volume Forecasting/Data")
df <- read.csv("stocks_updated.csv")
#Set week 53 to week 0 - needed for lags
df$week[df$week == 53] <- 0
#Drop the index values that were generated by Python (not needed anymore)
df$X <- NULL
#Lag the close prices
df$lclose <- as.numeric(sapply(1:nrow(df), function(x) df$close[x-1]))
#Generate variable for returns
ave_close <- df %>%
group_by(asset, week) %>%
summarize(ave_close = ave(close)) %>%
ungroup()
ave_close <- unique(ave_close)
ave_close$ave_lclose <- as.numeric(sapply(1:nrow(ave_close), function(x) ave_close$ave_close[x-1]))
ave_close <- ave_close[!ave_close$week == 0,]
ave_close$ret <- log(ave_close$ave_close/ave_close$ave_lclose)
#Daily returns to calculate interweek variance
df$ret <- log(df$close/df$lclose)
#Drop the unneeded week
df <- df[!df$week == 0,]
#Generate variable for autocovariance of returns
autocov <- df %>%
group_by(asset, week) %>%
summarize(autocov = cov(close,lclose)) %>%
ungroup()
autocov$autocov <- Math.cbrt((autocov$autocov))
#Generate variable for variance/stdev
var_ret <- df %>%
group_by(asset, week) %>%
summarize(var_ret = var(ret)) %>%
ungroup()
var_ret$stdev <- sqrt(var_ret$var_ret)
#Generate variable for volume
ave_vol <- df %>%
group_by(asset, week) %>%
summarize(ave_vol = ave(close*volume)) %>%
ungroup()
ave_vol <- unique(ave_vol)
#Create a weekly dataset from the daily data
df_weekly <- as.data.frame(cbind(ave_close$asset, ave_close$week, ave_close$ret, var_ret$stdev, ave_vol$ave_vol,autocov$autocov))
df_weekly <- df_weekly %>%
rename(
Asset = V1,
Week  = V2,
Avret = V3,
Stdev = V4,
Avvol = V5,
Autocov = V6
)
#Ensure all data is numeric
df_weekly$Week  <- as.numeric(df_weekly$Week)
df_weekly$Avret <- as.numeric(df_weekly$Avret)
df_weekly$Stdev <- as.numeric(df_weekly$Stdev)
df_weekly$Avvol <- as.numeric(df_weekly$Avvol)
df_weekly$Autocov <- as.numeric(df_weekly$Autocov)
#Drop uneeded
rm(autocov, ave_close, ave_vol, df, var_ret)
#Create the log of trading volume
df_weekly$LogVol <- log(df_weekly$Avvol)
df_weekly$LogVol <- as.numeric(df_weekly$LogVol)
write.csv(df_weekly,"C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Stock Scraper\\stocks_weekly.csv", row.names = FALSE)
###############################################################################
###############################################################################
###############################################################################
#Sentiment Data Analysis
sub <- read.csv('C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\WSB Scraper\\Submissions\\assets3_v2.csv')
#sub2 <- read.csv('C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\WSB Scraper\\Submissions\\assets2_v2.csv')
#sub <- rbind(sub,sub2)
#rm(sub2)
#dates <- read.csv('C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Stock Scraper\\date.csv')
#Submissions
sub$count <- 1
num_sub <- sub %>%
group_by(asset, week) %>%
summarize(Submissions = sum(count)) %>%
ungroup()
num_sub <- num_sub %>%
rename(
Asset = asset,
Week = week,
)
#Sentiments
sentiment_weekly <- sub %>%
group_by(asset, week) %>%
summarize(sentiment_weekly = ave(compound1)) %>%
ungroup()
sentiment_weekly <- unique(sentiment_weekly)
sentiment_weekly <- sentiment_weekly %>%
rename(
Week = week,
Asset = asset,
Ave_Sentiment = sentiment_weekly
)
#Combining weekly stocks with weekly sentiments
Combined_df <- merge(df_weekly, sentiment_weekly, by=c('Week','Asset'), all = T)
Combined_df <- merge(Combined_df,num_sub, by = c('Week','Asset'), all = T)
Combined_df[is.na(Combined_df)] <- 0
Combined_df <- Combined_df[
with(Combined_df, order(Asset,Week)),
]
Combined_df$Submissions <- ifelse(Combined_df$Submissions == 0,1,
Combined_df$Submissions)
Combined_df$Avvol <- (Combined_df$Avvol)*(1/1000000000)
Ave_Sentiment <- scale(Combined_df$Ave_Sentiment)
#Remove FORD from sample - not the actual ford
Combined_df<-Combined_df[!(Combined_df$Asset=="FORD"),]
#Cleaning firms with have IPO during the year and therefore no trading data
Combined_df<-Combined_df[!(Combined_df$LogVol==0),]
#Drop uneeded
rm(num_sub,sentiment_weekly, sub, Ave_Sentiment, df_weekly)
################################################################################
#Combining with market cap data for stratification
mktcap <- read.csv('C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Stock Scraper\\mktcap.csv')
Combined_df <- merge(Combined_df, mktcap, by=c('Asset'), all = T)
#Splitting Data into individual Quantiles
Combined_df$quantile <- ecdf(Combined_df$Market.Cap)(Combined_df$Market.Cap)
topdf <- Combined_df[(Combined_df$quantile > 0.75),]
middf <- Combined_df[(Combined_df$quantile > 0.25) & (Combined_df$quantile <0.75),]
bottomdf <- Combined_df[(Combined_df$quantile < 0.25),]
write.csv(topdf,"C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Regression\\STATAdataTop30.csv", row.names = FALSE)
write.csv(middf,"C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Regression\\STATAdataMid30.csv", row.names = FALSE)
write.csv(bottomdf,"C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Regression\\STATAdataBottom30.csv", row.names = FALSE)
write.csv(Combined_df,"C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Regression\\STATAdata.csv", row.names = FALSE)
?scale
setwd("C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Stock Scraper")
#setwd("/Users/nishaldave/OneDrive - University of Bristol/Dissertation/Volume Forecasting/Data")
df <- read.csv("stocks_updated.csv")
#Set week 53 to week 0 - needed for lags
df$week[df$week == 53] <- 0
#Drop the index values that were generated by Python (not needed anymore)
df$X <- NULL
#Lag the close prices
df$lclose <- as.numeric(sapply(1:nrow(df), function(x) df$close[x-1]))
#Generate variable for returns
ave_close <- df %>%
group_by(asset, week) %>%
summarize(ave_close = ave(close)) %>%
ungroup()
ave_close <- unique(ave_close)
ave_close$ave_lclose <- as.numeric(sapply(1:nrow(ave_close), function(x) ave_close$ave_close[x-1]))
ave_close <- ave_close[!ave_close$week == 0,]
ave_close$ret <- log(ave_close$ave_close/ave_close$ave_lclose)
#Daily returns to calculate interweek variance
df$ret <- log(df$close/df$lclose)
#Drop the unneeded week
df <- df[!df$week == 0,]
#Generate variable for autocovariance of returns
autocov <- df %>%
group_by(asset, week) %>%
summarize(autocov = cov(close,lclose)) %>%
ungroup()
autocov$autocov <- Math.cbrt((autocov$autocov))
#Generate variable for variance/stdev
var_ret <- df %>%
group_by(asset, week) %>%
summarize(var_ret = var(ret)) %>%
ungroup()
var_ret$stdev <- sqrt(var_ret$var_ret)
#Generate variable for volume
ave_vol <- df %>%
group_by(asset, week) %>%
summarize(ave_vol = ave(close*volume)) %>%
ungroup()
ave_vol <- unique(ave_vol)
#Create a weekly dataset from the daily data
df_weekly <- as.data.frame(cbind(ave_close$asset, ave_close$week, ave_close$ret, var_ret$stdev, ave_vol$ave_vol,autocov$autocov))
df_weekly <- df_weekly %>%
rename(
Asset = V1,
Week  = V2,
Avret = V3,
Stdev = V4,
Avvol = V5,
Autocov = V6
)
#Ensure all data is numeric
df_weekly$Week  <- as.numeric(df_weekly$Week)
df_weekly$Avret <- as.numeric(df_weekly$Avret)
df_weekly$Stdev <- as.numeric(df_weekly$Stdev)
df_weekly$Avvol <- as.numeric(df_weekly$Avvol)
df_weekly$Autocov <- as.numeric(df_weekly$Autocov)
#Drop uneeded
rm(autocov, ave_close, ave_vol, df, var_ret)
#Create the log of trading volume
df_weekly$LogVol <- log(df_weekly$Avvol)
df_weekly$LogVol <- as.numeric(df_weekly$LogVol)
write.csv(df_weekly,"C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Stock Scraper\\stocks_weekly.csv", row.names = FALSE)
###############################################################################
###############################################################################
###############################################################################
#Sentiment Data Analysis
sub <- read.csv('C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\WSB Scraper\\Submissions\\assets3_v2.csv')
#sub2 <- read.csv('C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\WSB Scraper\\Submissions\\assets2_v2.csv')
#sub <- rbind(sub,sub2)
#rm(sub2)
#dates <- read.csv('C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Stock Scraper\\date.csv')
#Submissions
sub$count <- 1
num_sub <- sub %>%
group_by(asset, week) %>%
summarize(Submissions = sum(count)) %>%
ungroup()
num_sub <- num_sub %>%
rename(
Asset = asset,
Week = week,
)
#Sentiments
sentiment_weekly <- sub %>%
group_by(asset, week) %>%
summarize(sentiment_weekly = ave(compound1)) %>%
ungroup()
sentiment_weekly <- unique(sentiment_weekly)
sentiment_weekly <- sentiment_weekly %>%
rename(
Week = week,
Asset = asset,
Ave_Sentiment = sentiment_weekly
)
#Combining weekly stocks with weekly sentiments
Combined_df <- merge(df_weekly, sentiment_weekly, by=c('Week','Asset'), all = T)
Combined_df <- merge(Combined_df,num_sub, by = c('Week','Asset'), all = T)
Combined_df[is.na(Combined_df)] <- 0
Combined_df <- Combined_df[
with(Combined_df, order(Asset,Week)),
]
Combined_df$Submissions <- ifelse(Combined_df$Submissions == 0,1,
Combined_df$Submissions)
Combined_df$Submissions <- log(Combined_df$Submissions)
Ave_Sentiment <- scale(Combined_df$Ave_Sentiment)
#Remove FORD from sample - not the actual ford
Combined_df<-Combined_df[!(Combined_df$Asset=="FORD"),]
#Cleaning firms with have IPO during the year and therefore no trading data
Combined_df<-Combined_df[!(Combined_df$LogVol==0),]
#Drop uneeded
rm(num_sub,sentiment_weekly, sub, Ave_Sentiment, df_weekly)
?scale
################################################################################
#Combining with market cap data for stratification
mktcap <- read.csv('C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Stock Scraper\\mktcap.csv')
Combined_df <- merge(Combined_df, mktcap, by=c('Asset'), all = T)
#Splitting Data into individual Quantiles
Combined_df$quantile <- ecdf(Combined_df$Market.Cap)(Combined_df$Market.Cap)
topdf <- Combined_df[(Combined_df$quantile > 0.75),]
middf <- Combined_df[(Combined_df$quantile > 0.25) & (Combined_df$quantile <0.75),]
bottomdf <- Combined_df[(Combined_df$quantile < 0.25),]
write.csv(topdf,"C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Regression\\STATAdataTop30.csv", row.names = FALSE)
write.csv(middf,"C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Regression\\STATAdataMid30.csv", row.names = FALSE)
write.csv(bottomdf,"C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Regression\\STATAdataBottom30.csv", row.names = FALSE)
write.csv(Combined_df,"C:\\Users\\Nish\\OneDrive - University of Bristol\\Dissertation\\Volume Forecasting\\Data\\Regression\\STATAdata.csv", row.names = FALSE)
